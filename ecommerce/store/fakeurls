from django.urls import path
from . import views

urlpatterns = [
    path("", views.StoreView.as_view(), name="store"),
    path("cart/", views.CartView.as_view(), name="cart"),
    path("checkout/", views.CheckoutView.as_view(), name="checkout"),
    path("update_item/", views.UpdateItem.as_view(), name="update_item"),
    path("create_product/", views.ProductCreateView.as_view(), name="create_product"),
    path("product_/", views.ProductListView.as_view(), name="product_list"),
    path(
        "product_/<str:name>/",
        views.ProductUpdateView.as_view(),
        name="product_update",
    ),
    path("template/", views.TemplateHomeView.as_view(), name="template_view"),
    path("order_archive/", views.OrderArchiveView.as_view(), name="order_archive"),
    path(
        "product_l/<int:pk>/",
        views.ProductDetailView.as_view(),
        name="product_detail",
    ),
    path(
        "orderitem_create/", views.OrderItemCreateView.as_view(), name="product_detail"
    ),
    path(
        "dayarchive/<int:year>/",
        views.OrderDayArchiveView.as_view(),
        name="order_archive_day",
    ),
    # path("CBVcustomer/", views.CustomerCreateView.as_view(), name="create_customer"),
    # path(
    #     "CBVcustomer/<str:name>/",
    #     views.CustomerUpdateView.as_view(),
    #     name="customer_update",
    # ),
    # path(
    #     "CBVcustomer/<str:name>/delete/",
    #     views.CustomerDeleteView.as_view(),
    #     name="customer_delete",
    # ),
    # path("createcustomerFBW/", views.customer_create_view, name="customercreate_FBW"),
    # path(
    #     "deletecustomerFBW/<str:name>/",
    #     views.customer_delete_view,
    #     name="deletecreate_FBW",
    # ),
    # path(
    #     "updatecustomerFBW/<str:name>/",
    #     views.customer_update_view,
    #     name="customerupdate_FBW",
    # ),
    # path("customer/<str:name>/", views.customer_update_view, name="customerupdate_FBW"),
    # path(
    #     "customer/<str:name>/delete/",
    #     views.customer_delete_view,
    #     name="deletecreate_FBW",
    # ),
    # path("customer/", views.customer_create_view, name="customercreate_FBW"),
    path("customer_", views.CustomerView.as_view(), name="customer"),
    path(
        "customer_/<str:name>",
        views.CustomerUpdateView.as_view(),
        name="customer_update",
    ),
    path(
        "customer_/<str:name>/delete",
        views.CustomerDeleteView.as_view(),
        name="customer_delete",
    ),
]


# if customer_name is not None:
    #     customer = get_object_or_404(Customer, name=customer_name)
    # elif request.method == "POST":
    #     customer_name = request.POST["name"]
    #     customer = get_object_or_404(Customer, name=customer_name)
    # else:
    #     customer = None
    #
    # if request.method == "POST":
    #     form = CustomerForm(request.POST, instance=customer)
    #
    #     if form.is_valid():
    #         form.save()
    #         return redirect(f"{customer_name}/")
    # else:
    #     form = CustomerForm(instance=customer)
    #
    # context = {
    #     "customer": customer,
    #     "form": form,
    # }
    # return render(
    #     request,
    #     os.path.join(settings.BASE_DIR, "templates/store/customer_FBW.html"),
    #     context,
    # )